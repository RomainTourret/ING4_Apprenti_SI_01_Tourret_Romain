{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romai\\\\Desktop\\\\Bunch_of_Stuff\\\\ECE-Paris\\\\ING4_APP\\\\S2\\\\Tech_Web\\\\lab-correction\\\\src\\\\channel\\\\Channel.js\";\nimport React, { useState } from 'react';\nimport Messages from '../message/Messages';\nimport MessageForm from '../message/MessageForm';\nconst styles = {\n  channel: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  messages: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n    '& ul': {\n      'margin': 0,\n      'padding': 0,\n      'textIndent': 0,\n      'listStyleType': 0\n    }\n  }\n};\n\nconst Channel = ({\n  channel\n}) => {\n  const [messages, setMessages] = useState([{\n    author: 'sergei',\n    creation: 1602831101929,\n    content: `\n\t\t\t## 1 - Architecture - Level easy\n\t\t\t\n\t\t\tIt is now the right time to re-organize/refactor our code. Split this\n\t\t\tmonolithic react Component into multiple section. In the end, we should end\n\t\t\tup with the following components: 'Header', 'Footer', 'Main', 'Channels',\n\t\t\t'Channel', 'Messages', 'MessageSend':\n\t\t\t\n\t\t\t- 'App.js' file uses 'Header.js', 'Main.js', 'Footer.js'\n\t\t\t- 'Main.js' file uses 'Channels.js', 'Channel.js'\n\t\t\t- 'Channels.js' prints the list of channels\n\t\t\t- 'Channel.js' prints the messages, uses 'Messages.js' and 'MessageSend.js'\n\t\t\t- 'Messages.js' prints the list of messages inside the current channel\n\t\t\t- 'MessageForm.js' send a new message\n\t\t\t\n\t\t\t\\`\\`\\`\n\t\t\t+--------------------------------------------+\n\t\t\t|                  Header                    |\n\t\t\t+--------------------------------------------+\n\t\t\t|   Channels    |          Channel           |\n\t\t\t|               | +------------------------+ |\n\t\t\t|               | |        Messages        | |\n\t\t\t|               | +------------------------+ |\n\t\t\t|               | |      MessageSend       | |\n\t\t\t|               | +------------------------+ |\n\t\t\t+--------------------------------------------+\n\t\t\t|                  Footer                    |\n\t\t\t+--------------------------------------------+\n\t\t\t\\`\\`\\`\n\t\t\t`\n  }, {\n    author: 'david',\n    creation: 1602832138892,\n    content: `\n\t\t\t## 2 - Styles - Level easy\n\t\t\t\n\t\t\tGive it some styles, use CSS to make it looks good. Possible source of\n\t\t\timprovements include changing the colors, replacing the HTML 'send' button\n\t\t\twith an icon, working on the header, providing day/night themes ... be creative\n\t\t\t`\n  }, {\n    author: 'sergei',\n    creation: 1602840139202,\n    content: `\n\t\t## 3 - Use an external library - Level medium\n\t\t\n\t\tFormat the date in a human readable format. While the date is generated on\n\t\tthe server side to ensure its relevance and prevent from forgery, it must be\n\t\tdisplayed according to the user browser local. The\n\t\t[Moment.js](https://momentjs.com/) library has been the library of choice\n\t\tfor many years to accomplish date formatting. Read what is displayed on the\n\t\ttop right corner of their homepage, it is now depreciated. Read the reasons\n\t\tand act accordingly.\n\t\t`\n  }, {\n    author: 'david',\n    creation: 1602844139200,\n    content: `\n\t\t\t## 4 - Support message contents in Markdown - Level hard\n\t\t\t\n\t\t\tMarkdown is the most popular syntax to format text into HTML. It is used\n\t\t\tby the majority of the project Readme files, to write documentation and to\n\t\t\tgenerate websites.\n\t\t\t\n\t\t\tI recommand you to use the [unified](https://unifiedjs.com/) which is very\n\t\t\tpowerful and comes with a lot of plugins. You can read the Markdown to HTML\n\t\t\tguide in the learn section and enrich it with your selection of relevant\n\t\t\tplugins.\n\t\t\t\n\t\t\tConsider adding syntax highlight support with a library like\n\t\t\t[Prism](https://prismjs.com/).\n\t\t\t`\n  }]);\n\n  const addMessage = newMessage => {\n    setMessages([...messages, newMessage]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"Messages for \", channel.name), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Channel;","map":{"version":3,"sources":["C:/Users/romai/Desktop/Bunch_of_Stuff/ECE-Paris/ING4_APP/S2/Tech_Web/lab-correction/src/channel/Channel.js"],"names":["React","useState","Messages","MessageForm","styles","channel","height","flex","display","flexDirection","overflow","messages","Channel","setMessages","author","creation","content","addMessage","newMessage","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,IAAI,EAAE,UAFE;AAGRC,IAAAA,OAAO,EAAE,MAHD;AAIRC,IAAAA,aAAa,EAAE,QAJP;AAKRC,IAAAA,QAAQ,EAAE;AALF,GADK;AAQdC,EAAAA,QAAQ,EAAE;AACTJ,IAAAA,IAAI,EAAE,UADG;AAETD,IAAAA,MAAM,EAAE,MAFC;AAGTI,IAAAA,QAAQ,EAAE,MAHD;AAIT,YAAQ;AACP,gBAAU,CADH;AAEP,iBAAW,CAFJ;AAGP,oBAAc,CAHP;AAIP,uBAAiB;AAJV;AAJC;AARI,CAAf;;AAqBA,MAAME,OAAO,GAAG,CAAC;AAACP,EAAAA;AAAD,CAAD,KAAe;AAC9B,QAAM,CAACM,QAAD,EAAWE,WAAX,IAA0BZ,QAAQ,CAAC,CACxC;AACCa,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCC,IAAAA,OAAO,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCE,GADwC,EAmCxC;AACCF,IAAAA,MAAM,EAAE,OADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCC,IAAAA,OAAO,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AATE,GAnCwC,EA8CxC;AACCF,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCC,IAAAA,OAAO,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbE,GA9CwC,EA6DxC;AACCF,IAAAA,MAAM,EAAE,OADT;AAECC,IAAAA,QAAQ,EAAE,aAFX;AAGCC,IAAAA,OAAO,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBE,GA7DwC,CAAD,CAAxC;;AAkFA,QAAMC,UAAU,GAAGC,UAAU,IAAI;AAChCL,IAAAA,WAAW,CAAC,CACX,GAAGF,QADQ,EAEXO,UAFW,CAAD,CAAX;AAIA,GALD;;AAOA,sBACC;AAAK,IAAA,KAAK,EAAEd,MAAM,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,KAAK,EAAED,MAAM,CAACO,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBN,OAAO,CAACc,IAA1B,CADD,eAEC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAER,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAKC,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEM,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD;AASA,CAnGD;;AAqGA,eAAeL,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Messages from '../message/Messages';\r\nimport MessageForm from '../message/MessageForm';\r\n\r\nconst styles = {\r\n\tchannel: {\r\n\t\theight: '100%',\r\n\t\tflex: '1 1 auto',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\toverflow: 'hidden'\r\n\t},\r\n\tmessages: {\r\n\t\tflex: '1 1 auto',\r\n\t\theight: '100%',\r\n\t\toverflow: 'auto',\r\n\t\t'& ul': {\r\n\t\t\t'margin': 0,\r\n\t\t\t'padding': 0,\r\n\t\t\t'textIndent': 0,\r\n\t\t\t'listStyleType': 0\r\n\t\t}\r\n\t},\r\n};\r\n\r\nconst Channel = ({channel}) => {\r\n\tconst [messages, setMessages] = useState([\r\n\t\t{\r\n\t\t\tauthor: 'sergei',\r\n\t\t\tcreation: 1602831101929,\r\n\t\t\tcontent: `\r\n\t\t\t## 1 - Architecture - Level easy\r\n\t\t\t\r\n\t\t\tIt is now the right time to re-organize/refactor our code. Split this\r\n\t\t\tmonolithic react Component into multiple section. In the end, we should end\r\n\t\t\tup with the following components: 'Header', 'Footer', 'Main', 'Channels',\r\n\t\t\t'Channel', 'Messages', 'MessageSend':\r\n\t\t\t\r\n\t\t\t- 'App.js' file uses 'Header.js', 'Main.js', 'Footer.js'\r\n\t\t\t- 'Main.js' file uses 'Channels.js', 'Channel.js'\r\n\t\t\t- 'Channels.js' prints the list of channels\r\n\t\t\t- 'Channel.js' prints the messages, uses 'Messages.js' and 'MessageSend.js'\r\n\t\t\t- 'Messages.js' prints the list of messages inside the current channel\r\n\t\t\t- 'MessageForm.js' send a new message\r\n\t\t\t\r\n\t\t\t\\`\\`\\`\r\n\t\t\t+--------------------------------------------+\r\n\t\t\t|                  Header                    |\r\n\t\t\t+--------------------------------------------+\r\n\t\t\t|   Channels    |          Channel           |\r\n\t\t\t|               | +------------------------+ |\r\n\t\t\t|               | |        Messages        | |\r\n\t\t\t|               | +------------------------+ |\r\n\t\t\t|               | |      MessageSend       | |\r\n\t\t\t|               | +------------------------+ |\r\n\t\t\t+--------------------------------------------+\r\n\t\t\t|                  Footer                    |\r\n\t\t\t+--------------------------------------------+\r\n\t\t\t\\`\\`\\`\r\n\t\t\t`\r\n\t\t},\r\n\t\t{\r\n\t\t\tauthor: 'david',\r\n\t\t\tcreation: 1602832138892,\r\n\t\t\tcontent: `\r\n\t\t\t## 2 - Styles - Level easy\r\n\t\t\t\r\n\t\t\tGive it some styles, use CSS to make it looks good. Possible source of\r\n\t\t\timprovements include changing the colors, replacing the HTML 'send' button\r\n\t\t\twith an icon, working on the header, providing day/night themes ... be creative\r\n\t\t\t`\r\n\t\t},\r\n\t\t{\r\n\t\t\tauthor: 'sergei',\r\n\t\t\tcreation: 1602840139202,\r\n\t\t\tcontent: `\r\n\t\t## 3 - Use an external library - Level medium\r\n\t\t\r\n\t\tFormat the date in a human readable format. While the date is generated on\r\n\t\tthe server side to ensure its relevance and prevent from forgery, it must be\r\n\t\tdisplayed according to the user browser local. The\r\n\t\t[Moment.js](https://momentjs.com/) library has been the library of choice\r\n\t\tfor many years to accomplish date formatting. Read what is displayed on the\r\n\t\ttop right corner of their homepage, it is now depreciated. Read the reasons\r\n\t\tand act accordingly.\r\n\t\t`\r\n\t\t},\r\n\t\t{\r\n\t\t\tauthor: 'david',\r\n\t\t\tcreation: 1602844139200,\r\n\t\t\tcontent: `\r\n\t\t\t## 4 - Support message contents in Markdown - Level hard\r\n\t\t\t\r\n\t\t\tMarkdown is the most popular syntax to format text into HTML. It is used\r\n\t\t\tby the majority of the project Readme files, to write documentation and to\r\n\t\t\tgenerate websites.\r\n\t\t\t\r\n\t\t\tI recommand you to use the [unified](https://unifiedjs.com/) which is very\r\n\t\t\tpowerful and comes with a lot of plugins. You can read the Markdown to HTML\r\n\t\t\tguide in the learn section and enrich it with your selection of relevant\r\n\t\t\tplugins.\r\n\t\t\t\r\n\t\t\tConsider adding syntax highlight support with a library like\r\n\t\t\t[Prism](https://prismjs.com/).\r\n\t\t\t`\r\n\t\t},\r\n\t]);\r\n\r\n\tconst addMessage = newMessage => {\r\n\t\tsetMessages([\r\n\t\t\t...messages,\r\n\t\t\tnewMessage\r\n\t\t]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styles.channel}>\r\n\t\t\t<div style={styles.messages}>\r\n\t\t\t\t<h1>Messages for {channel.name}</h1>\r\n\t\t\t\t<Messages messages={messages} />\r\n\t\t\t</div>\r\n\t\t\t<MessageForm addMessage={addMessage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}